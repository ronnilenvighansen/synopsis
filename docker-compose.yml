services:
  userservice:
    build:
      context: .
      dockerfile: UserService/Dockerfile
    command: ["dotnet", "UserService/UserService.dll"]
    environment:
      - ConnectionStrings__DockerConnection=Server=userdb;Database=userdb;User=root;Password=password
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    networks:
      - backend
    deploy:
      replicas: 3

  postservice:
    build:
      context: .
      dockerfile: PostService/Dockerfile
    command: ["dotnet", "PostService/PostService.dll"]
    environment:
      - ConnectionStrings__DockerConnection=Server=postdb;Database=postdb;User=root;Password=password
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - BaseAddresses__DockerBaseAddress=http://userservice/api/v2/user/
    networks:
      - backend
    deploy:
      replicas: 3
  
  apigateway:
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_URLS=https://+:443
      - CERT_PATH=/certs/myapp.pfx
      - CERT_PASSWORD=jakob
    ports:
      - "5200:443"
    volumes:
      - ./ApiGateway/certs:/certs
    depends_on:
      - userservice
      - postservice
      - aggregatorservice
      - authenticationservice
    networks:
      - backend

  kong:
    image: kong:latest
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_LISTEN: 0.0.0.0:5201, 0.0.0.0:80
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_DECLARATIVE_CONFIG: /kong/kong.yml
    ports:
      - "5201:80"
      - "8001:8001"
    volumes:
      - ./kong.yml:/kong/kong.yml
    depends_on:
      - userservice
      - postservice
      - aggregatorservice
      - authenticationservice
    networks:
      - backend

  aggregatorservice:
    build:
      context: .
      dockerfile: AggregatorService/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
    networks:
      - backend
  
  authenticationservice:
    build:
      context: .
      dockerfile: AuthenticationService/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
    networks:
      - backend

  userdb:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: userdb
    volumes:
      - userdb-data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  postdb:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: postdb
    volumes:
      - postdb-data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  backend:
    driver: bridge

volumes:
  userdb-data:
  postdb-data: